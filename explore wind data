import pandas as pd
import datetime
path6 = "C:/Users/Administrator/exercise_data/wind.data"
data = pd.read_table(path6, sep = "\s+", parse_dates = [[0,1,2]]) 
data.head()
def fix_century(x):
    year = x.year - 100 if x.year > 1989 else x.year
    return datetime.date(year, x.month, x.day)

# apply the function fix_century on the column and replace the values to the right ones
data['Yr_Mo_Dy'] = data['Yr_Mo_Dy'].apply(fix_century)

# data.info()
data.head()
#修复BUG数据
data["Yr_Mo_Dy"] = pd.to_datetime(data["Yr_Mo_Dy"])
data = data.set_index('Yr_Mo_Dy'）
data.head()
#将日期设为索引，注意数据类型，应该是datetime64[ns]
data.isnull().sum()
#对应每一个location，一共有多少数据值缺失
data.shape[0] - data.isnull().sum()
#对应每一个location，一共有多少完整的数据值
data.mean().mean()
#对于全体数据，计算风速的平均值
loc_stats = pd.DataFrame()

loc_stats['min'] = data.min() # min
loc_stats['max'] = data.max() # max 
loc_stats['mean'] = data.mean() # mean
loc_stats['std'] = data.std() # standard deviations

loc_stats
#创建一个名为loc_stats的数据框去计算并存储每个location的风速最小值，最大值，平均值和标准差
day_stats = pd.DataFrame()

# this time we determine axis equals to one so it gets each row.
day_stats['min'] = data.min(axis = 1) # min
day_stats['max'] = data.max(axis = 1) # max 
day_stats['mean'] = data.mean(axis = 1) # mean
day_stats['std'] = data.std(axis = 1) # standard deviations

day_stats.head()
#创建一个名为day_stats的数据框去计算并存储所有location的风速最小值，最大值，平均值和标准差
data['date'] = data.index
data['month'] = data['date'].apply(lambda date: date.month)
data['year'] = data['date'].apply(lambda date: date.year)
data['day'] = data['date'].apply(lambda date: date.day)
january_winds = data.query('month == 1')
january_winds.loc[:,'RPT':"MAL"].mean()
#对于每一个location，计算一月份的平均风速
data.query('month == 1 and day == 1')
#对于数据记录按照年为频率取样
data.query('day == 1')
#对于数据记录按照月为频率取样
